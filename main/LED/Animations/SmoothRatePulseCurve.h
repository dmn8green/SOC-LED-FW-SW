//******************************************************************************
/**
 * @file SmoothRatePulseCurve.h
 * @author pat laplante (plaplante@appliedlogix.com)
 * @brief SmoothRatePulseCurve class definition
 * @version 0.1
 * @date 2023-09-19
 * 
 * @copyright Copyright MN8 (c) 2023
 */
//******************************************************************************
#pragma once

#include "BasePulseCurve.h"

#define SMOOTH_RATE_PULSE_CURVE_LENGTH 101

//******************************************************************************
/**
 * @brief Smooth pulse curve
 * 
 * This class implements a smooth pulse curve.  The curves was generated by a
 * javascript script.
 *
 * ---------- 
 * const gamma = 0.14; // affects the width of peak (more or less darkness)
 * const beta = 0.5; // shifts the gaussian to be symmetric
 *
 * let prev = 0;
 * for (i=0; i<100; i++) {
 *    const val = 20-(20.0*(Math.exp(-(Math.pow(((i/100)-beta)/gamma,2.0))/2.0)));
 *    console.log(`refresh_rates[${i}]=${(val-prev).toFixed(0)};`);
 * }
 * ----------
 * 
 */
class SmoothRatePulseCurve : public BasePulseCurve {
public:
    SmoothRatePulseCurve(void);
    int get_value(int index) override { return refresh_rates[index]; }
    int get_length(void) override { return SMOOTH_RATE_PULSE_CURVE_LENGTH; }

private:
    int refresh_rates[SMOOTH_RATE_PULSE_CURVE_LENGTH];
};